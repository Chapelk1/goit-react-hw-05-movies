{"version":3,"file":"static/js/251.08f12339.chunk.js","mappings":"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","sources":["api-tmdb.js","page/MovieDetails/MovieDetails.styled.js","page/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios'\r\n\r\n\r\n\r\n\r\n\r\nexport function getApi(url) {\r\n  const options = {\r\n    method: 'GET',\r\n    headers: {\r\n      accept: 'application/json',\r\n      Authorization:\r\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzYjI3MGE5MDQxOWZmZGU3NTdhNTMwZjc5ZGEwZjk5MyIsInN1YiI6IjY1MTRhOTZlYzUwYWQyMDE0ZGNiZDRhMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.0cnUSQym0igy96KjBCSKsZxHrfcfXCa_zP5yeOXpcdA',\r\n    },\r\n  };\r\n  return axios.get(url, options).then(r=> r.data);\r\n}\r\n\r\n\r\nexport function getApiQuery(url, query) {\r\n  const options = {\r\n    method: 'GET',\r\n    headers: {\r\n      accept: 'application/json',\r\n      Authorization:\r\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzYjI3MGE5MDQxOWZmZGU3NTdhNTMwZjc5ZGEwZjk5MyIsInN1YiI6IjY1MTRhOTZlYzUwYWQyMDE0ZGNiZDRhMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.0cnUSQym0igy96KjBCSKsZxHrfcfXCa_zP5yeOXpcdA',\r\n    },\r\n    params: {\r\n      query: `${query}`,\r\n    },\r\n  };\r\n  return axios.get(url, options).then(r => r.data);\r\n}","import { Link } from \"react-router-dom\";\r\nimport styled from \"@emotion/styled\";\r\n\r\n\r\nexport const LinkItm = styled(Link)`\r\n  display: inline-block;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  text-decoration: none;\r\n  color: white;\r\n  font-weight: 500;\r\n  background-color: #34424f;\r\n\r\n  &:hover {\r\n    color: white;\r\n    background-color: teal;\r\n    border-color: teal;\r\n  }\r\n`;\r\n\r\nexport const Wraper = styled.div`\r\n display: flex;\r\n gap: 40px;\r\n padding-top: 20px;\r\n padding-bottom: 20px;\r\n`\r\n\r\nexport const Thumb = styled.div`\r\n  max-width: 300px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\nexport const WraperImg = styled.div`\r\n  max-width: 100%;\r\n  margin-bottom: 20px;\r\n`;\r\nexport const WraperBtn = styled.div`\r\n  > a:not(:last-child){\r\n    margin-right: 20px;\r\n  }\r\n`;\r\nexport const WraperDesc = styled.div`\r\n  \r\n`;\r\n\r\nexport const Paragraf = styled.p`\r\n  font-size: 20px;\r\n  color: white;\r\n`;\r\nexport const Title = styled.h1`\r\n  margin-bottom: 12px;\r\n  color: white;\r\n`;\r\nexport const SecondTitle = styled.h2`\r\n  margin-top: 20px;\r\n  color: white;\r\n`;\r\n\r\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\r\nimport { useState, useEffect } from \"react\";\r\nimport { getApi } from \"api-tmdb\";\r\nimport { Suspense } from 'react';\r\nimport {\r\n  LinkItm,\r\n  Wraper,\r\n  WraperImg,\r\n  WraperDesc,\r\n  Paragraf,\r\n  Title,\r\n  SecondTitle,\r\n  Thumb,\r\n  WraperBtn,\r\n} from './MovieDetails.styled';\r\n\r\nexport default function MovieDetails() {\r\n    const { movieId } = useParams();\r\n    const [movie, setMovie] = useState(null)\r\n    const location = useLocation()\r\n    const backLinkHref = location.state?.from ?? '/movies';\r\n  \r\n    const url = `https://api.themoviedb.org/3/movie/${movieId}`;\r\n    \r\n    useEffect(() => {\r\n      getApi(url).then(setMovie);\r\n    }, [url]);\r\n\r\n  \r\n    const img = 'https://fakeimg.pl/400x600'\r\n  \r\n\r\n    return (\r\n      <>\r\n        <LinkItm to={backLinkHref}>{`< Back`}</LinkItm>\r\n        {movie && (\r\n          <>\r\n            <Wraper>\r\n              <Thumb>\r\n                <WraperImg>\r\n                  <img\r\n                    src={movie.poster_path ? `https://image.tmdb.org/t/p/original${movie.poster_path}` : img}\r\n                    alt={movie.title}\r\n                  />\r\n                </WraperImg>\r\n                <WraperBtn>\r\n                  <LinkItm to=\"cast\" state={{ from: backLinkHref }}>\r\n                    Cast\r\n                  </LinkItm>\r\n                  <LinkItm to=\"reviews\" state={{ from: backLinkHref }}>\r\n                    Reviews\r\n                  </LinkItm>\r\n                </WraperBtn>\r\n              </Thumb>\r\n\r\n              <WraperDesc>\r\n                <Title>{movie.title}</Title>\r\n                <Paragraf>\r\n                  Vote averages: {movie.vote_average.toFixed(1)}\r\n                </Paragraf>\r\n                <SecondTitle>Overview</SecondTitle>\r\n                <Paragraf>{movie.overview}</Paragraf>\r\n                <SecondTitle>Genres</SecondTitle>\r\n                {movie.genres.map(genre => (\r\n                  <Paragraf key={genre.name}>{genre.name}</Paragraf>\r\n                ))}\r\n              </WraperDesc>\r\n            </Wraper>\r\n\r\n            <Suspense fallback={<Paragraf>Loading subpage...</Paragraf>}>\r\n              <Outlet />\r\n            </Suspense>\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n}\r\n"],"names":["getApi","url","axios","get","method","headers","accept","Authorization","then","r","data","getApiQuery","query","options","params","concat","LinkItm","styled","Link","_templateObject","_taggedTemplateLiteral","Wraper","div","_templateObject2","Thumb","_templateObject3","WraperImg","_templateObject4","WraperBtn","_templateObject5","WraperDesc","_templateObject6","Paragraf","p","_templateObject7","Title","h1","_templateObject8","SecondTitle","h2","_templateObject9","MovieDetails","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","backLinkHref","useLocation","state","from","useEffect","_jsxs","_Fragment","children","_jsx","to","src","poster_path","alt","title","vote_average","toFixed","overview","genres","map","genre","name","Suspense","fallback","Outlet"],"sourceRoot":""}